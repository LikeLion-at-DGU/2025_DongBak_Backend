name: Deploy to AWS EC2

on:
  push:
    branches:
      - main  # 🚀 main 브랜치에 push되면 실행

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ GitHub 레포지토리 코드 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2️⃣ Docker Hub 로그인
      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # 3️⃣ Docker 이미지 빌드 및 Docker Hub에 푸시 (빌드 시 GitHub Secrets 사용)
      - name: Build and Push Docker Image
        run: |
          docker build --platform linux/amd64 \
            --build-arg SECRET_KEY="${{ secrets.SECRET_KEY }}" \
            --build-arg DB_NAME="${{ secrets.DB_NAME }}" \
            --build-arg DB_USER="${{ secrets.DB_USER }}" \
            --build-arg DB_PASSWORD="${{ secrets.DB_PASSWORD }}" \
            --build-arg DB_HOST="${{ secrets.DB_HOST }}" \
            --build-arg DB_PORT="${{ secrets.DB_PORT }}" \
            -t ${{ secrets.DOCKER_USERNAME }}/dongbak2025:latest .
          
          docker push ${{ secrets.DOCKER_USERNAME }}/dongbak2025:latest

      # 4️⃣ EC2 서버에 SSH 접속 후 배포 실행
      - name: Deploy to AWS EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "🔄 기존 컨테이너 중지 및 삭제..."
            docker-compose down

            echo "🧹 불필요한 Docker 이미지 정리..."
            docker image prune -a -f

            echo "⬇️ 최신 Docker 이미지 Pull..."
            docker pull ${{ secrets.DOCKER_USERNAME }}/dongbak2025:latest

            echo "🚀 `docker-compose`로 컨테이너 실행..."
            docker-compose up -d --build

            echo "🛠 데이터베이스 마이그레이션 실행..."
            docker exec django_backend python manage.py migrate

            echo "✅ Nginx 재시작..."
            sudo systemctl restart nginx

            echo "✅ 배포 완료!"